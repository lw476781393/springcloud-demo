server:
  port: 8081
spring:
  application:
    name: eurekaserver
  profiles:
    active: dev
  cloud:
    inetutils:
      preferred-networks: 127.0.0.1
    client:
      ip-address: 127.0.0.1
# eureka.server.enable-self-preservation：是否开启自我保护，默认为 true，在开启自我保护的情况下，注册中心在丢失客户端时，
#  会进入自动保护模式，注册中心并不会将该服务从注册中心删除掉。这里我设置为 false，即关闭自我保护。根据我的经验，如果设置
#  为 true，在负载均衡条件下，一个服务挂掉后，注册中心并没有删掉该服务，会导致客户端请求的时候可能会请求到该服务，导致系统
#  无法访问，因此我推荐将这个属性设置为 false。
#  eureka.instance.prefer-ip-address：是否以 IP 注册到注册中心，Eureka 默认是以 hostname 来注册的，如果设置为 false，可以
#  eurekaserver 管理界面显示的地址为本机 hostname
eureka:
  server:
    peer-node-read-timeout-ms: 3000
    enable-self-preservation: false
  instance:
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
  client:
    registerWithEureka: true
    fetchRegistry: false
    healthcheck:
      enabled: true
    serviceUrl:
      defaultZone: http://127.0.0.1:8081/eureka/